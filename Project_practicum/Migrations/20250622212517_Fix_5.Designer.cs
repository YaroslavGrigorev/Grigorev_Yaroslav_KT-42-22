// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Project_practicum.Database;

#nullable disable

namespace Project_practicum.Migrations
{
    [DbContext(typeof(UniversityDBContext))]
    [Migration("20250622212517_Fix_5")]
    partial class Fix_5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Project_practicum.Models.Degree", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Degrees");
                });

            modelBuilder.Entity("Project_practicum.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Department_Id")
                        .HasComment("Id факультета");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FoundedDate")
                        .HasColumnType("timestamp")
                        .HasColumnName("Founded_Date")
                        .HasComment("Дата основания факультета");

                    b.Property<int?>("HeadId")
                        .HasColumnType("integer")
                        .HasColumnName("Head_Id")
                        .HasComment("Id зав. кафедры");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Name")
                        .HasComment("Название факультета");

                    b.HasKey("Id")
                        .HasName("pl_Departments_department_id");

                    b.HasIndex("HeadId")
                        .IsUnique();

                    b.HasIndex(new[] { "HeadId" }, "idx_Departments_fk_f_head_id");

                    b.ToTable("Departments", (string)null);
                });

            modelBuilder.Entity("Project_practicum.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Discipline_Id")
                        .HasComment("Id дисциплины");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Discipline_Name")
                        .HasComment("Название дисциплины");

                    b.HasKey("Id")
                        .HasName("pl_Disciplines_discipline_id");

                    b.HasIndex("Name")
                        .HasDatabaseName("idx_Disciplines_name");

                    b.ToTable("Disciplines", (string)null);
                });

            modelBuilder.Entity("Project_practicum.Models.Load", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Load_Id")
                        .HasComment("Id нагрузки");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int4")
                        .HasColumnName("Discipline_Id")
                        .HasComment("Id дисциплины");

                    b.Property<int>("Hours")
                        .HasColumnType("int4")
                        .HasColumnName("Hours")
                        .HasComment("Количество часов нагрузки");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int4")
                        .HasColumnName("Teacher_Id")
                        .HasComment("Id преподавателя");

                    b.HasKey("Id")
                        .HasName("pl_Loads_load_id");

                    b.HasIndex(new[] { "DisciplineId" }, "idx_Loads_fk_f_discipline_id");

                    b.HasIndex(new[] { "TeacherId" }, "idx_Loads_fk_f_teacher_id");

                    b.ToTable("Loads", (string)null);
                });

            modelBuilder.Entity("Project_practicum.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Project_practicum.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Teacher_Id")
                        .HasComment("Id преподавателя");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DegreeId")
                        .HasColumnType("int4")
                        .HasColumnName("Degree_Id")
                        .HasComment("Id ученой степени");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int4")
                        .HasColumnName("Department_Id")
                        .HasComment("Id кафедры");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("First_Name")
                        .HasComment("Имя преподавателя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("Last_Name")
                        .HasComment("Фамилия преподавателя");

                    b.Property<int>("PositionId")
                        .HasColumnType("int4")
                        .HasColumnName("Position_Id")
                        .HasComment("Id занимаемой должности");

                    b.HasKey("Id")
                        .HasName("pl_Teachers_teacher_id");

                    b.HasIndex("PositionId");

                    b.HasIndex(new[] { "DegreeId" }, "idx_Teachers_fk_f_degree_id");

                    b.HasIndex(new[] { "DepartmentId" }, "idx_Teachers_fk_f_department_id");

                    b.HasIndex(new[] { "DegreeId" }, "idx_Teachers_fk_f_position_id");

                    b.ToTable("Teachers", (string)null);
                });

            modelBuilder.Entity("Project_practicum.Models.Department", b =>
                {
                    b.HasOne("Project_practicum.Models.Teacher", "Head")
                        .WithOne()
                        .HasForeignKey("Project_practicum.Models.Department", "HeadId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_f_head_id");

                    b.Navigation("Head");
                });

            modelBuilder.Entity("Project_practicum.Models.Load", b =>
                {
                    b.HasOne("Project_practicum.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_discipline_id");

                    b.HasOne("Project_practicum.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_teacher_id");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Project_practicum.Models.Teacher", b =>
                {
                    b.HasOne("Project_practicum.Models.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_degree_id");

                    b.HasOne("Project_practicum.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_department_id");

                    b.HasOne("Project_practicum.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_f_position_id");

                    b.Navigation("Degree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
